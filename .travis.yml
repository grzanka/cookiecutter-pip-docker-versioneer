language: python

# travis-ci runs by default on ancient Ubuntu 12.04 (precise), with support until XXX
# following options will give us Ubuntu 14.04 (trusty)
sudo: required
dist: trusty

cache:
  directories:
  - ~/.cache/pip

before_cache:
  - rm -f $HOME/.cache/pip/log/debug.log


# for testing we'll use tox
# test matrix will include three types of python interpreter:
#   - on travis level: "python: XX"
#   - inside template virtualenv generated by tox: "pyXX" in TOXENV
#   - testing template includes generating a project
#        this project will use virtualenv generated by ita own tox: "projXX" in TOXENV
# other elements like "docs" will be used to test correctness of template documentation
matrix:
    include:
        - os: linux
          python: 2.7
          env: TOXENV=py27-proj27
        - os: linux
          python: 3.3
          env: TOXENV=py33-proj33
        - os: linux
          python: 3.4
          env: TOXENV=py34-proj34
        - os: linux
          python: 3.5
          env: TOXENV=py35-proj35
        - os: linux
          python: 3.5-dev
          env: TOXENV=py35-proj35
        # travis nightly points to python 3.6 now
        - os: linux
          python: nightly
          env: TOXENV=py36-proj36
        - os: linux
          python: 3.4
          env: TOXENV=docs
        - os: linux
          python: 3.4
          env: TOXENV=py34-projdocs
        - os: linux
          python: 3.4
          env: TOXENV=py34-projpackaging
        - os: linux
          python: 3.4
          env: TOXENV=py34-projpy3pep8
        - os: linux
          python: 2.7
          env: TOXENV=py27-projpep8
        - os: linux
          python: 3.4
          env:
            - TOXENV=testdeploy
           # GitHub secured token, you need to update it to your own if you want to use it
            - secure: "TvwFrRVjQzxnvMjV5Spo/WAfWOIjOR4j91dBqRaykyG2WLkAS95iOwkNaa0OAcqDQf6uFJ2so54qpz8yPCZ+540hu3AspN2aeSS9IBmhia8CZ592BHm+plT2FPQZMC4PzXtG3eW1VnL+3Skvzwe4v6Qzffai8YdEWDnMYOrq8QkDeJnP2YqhatyrBih3FIhXWsNxk//5FHm7OEtQAAFhm4cjf2+vlhCE79kO3ynK/SXJuNXUk6+aKlnvus4Ya6kvMLihq+pE6+1pP/zn/YBU6u2qtR8/xg8oLP3FwrzAgczInlAeC8aRZVhknTtdmJQJcPyteSwAtrdeLST/uvHyYdBC1EVEntx08mDpUJqsEn7usGPsx+4GCJQ6VoBppvE9MutAitfDQV0xEQrb3ESM2mFJ1rX6vNVd6GSp5cX7Ko8rMneD4o8/PNUwRnmL0hu14GiVvd1up3pFT2a1Q0y19TIMRPbHx6Qdhl3Qa13Owa2p4tzGJzmntOD1dtdYahSXoV5Gc+uWLgCz9LnCLgvW2l8cyegz8kM7bLjrUdB3sj2b5QQZSeKWIrm5X7yk6ny2I8IwhIT0YSi7DJVOwENyaxAudrijzQZ3rxJJy2CfUPX8w7vrvZwLSisvQhqKHR3maVWx/q8CJ08uvI0ydGgjMo8TS4dZc9aHtAcwgFVGfTQ="
            # PyPI pass for test user (PYPIPASS variable)
            - secure: "pYp/mgu2mq3pjrx1njwR8cH6kvWYWU8lLI0CLzA89f9kqfShhLOqcez8teXZ9PfxgNXhCAbXUOhkpM/pHmeiBfZZtFqtbVSZ5jgCNmP9G9nFKaqI9oa3shHUQ20inSo6X27X9E8WwEk3pkNdysBmc/j/WH333YFdT5eMb1GGJlhIgCPD9ciFd9v1Z8VnX4NEAflSlBWGXjE4nqYvNY6WKAgU/qcEyrnujkypxymZ98qPjO8KgpveaAIwdlgfth7qRi96MzhH09ZGIVTDvG5VfDX5StRCsFJHa+HXrsAYr6QkfMyFcMcMkTefjJSMfu6j8jZYy8Z1ppEdVcgfzBS9BfpMENsCAwf5kVxSGMaOCYzgjlMbbXaQaDZftt90qyTXZ+8Q94Li0HWPt2DB4TplqZ18AXbrskE0dGbzmjODrtlo0fL7oR3MQLDYajVbBU9vYN03Gst5+JDtAArEjRwJ+0AOOJhJvn9h9BT9uVcFOCl/gSrXTLF6bm7+dUexZSg3mY4qJ7hpEqsuLinxcLNBkJoM3HwameD5mWINsTLbPTMAF2uBWbF5nmp2dHpBeKI4iX/tIp/j9PlmCXpTch5F8iVNBeiCBBsGfTrGlmoQ5mTVoGO3bd9CmQKOGvExa/C6UNtVOPOvgWjAkPQxIhQNkTXBk0kTgNANn0xi1CgPCho="
            # codeclimate repo token (CODECLIMATE_REPO_TOKEN variable) for test user
            - secure: "hjbf7Q3HXSirI5WcirYo1YlSgsPkH5xT3pRTcpZm8Cx3zhSInLiU00S0DIdDNPUIJg42NvnRBfGQTsoq+KvtpuGLjQTpFlQ3np9fYJxOA7BqYf2fiICK/EsoZw3QEp5CatKtxv86mfHmxcyVH6HoiGecpODWGltqkluk34ndRi3ULEWTLQc0Lx0IBunIFPWci7DIT7Gj/ALW/t+3QT3DoYAV5AvZWGzQfiSpKmFoTrqClMvQE+sHSUCXKLJkHONn+N5aWw3Xb1v5NMIgSg38owkhu+yM6Augzu+48aiw/X1o90G4uVM/QPFWbycniMffFNzxY6Q9Bv8hLWjrfIhguMH8PqxbllwJgnASUofNEhqOukxWWXMfLQMaSkgcEiiv65oFYgrd7LsAt5tWnJ9+ARqUfmXDgs0o/26DzJa1iqxV1R4T5y9U5zUVhpICp2bziGPoZJixB4PU49Q2O7zmLf7RzRveD1c10EFyfWF2iDcE3I0k5JtbhSaljqgH2V07/Radhi1Qd/B4BBjbdUYs1Y2i7zbt4winRk+lDvqBA2lIjry6Rbw3fhXX4n6TAd6/tsLnMZ6F7ET/voWd+iWeAKwtrdK2KPCC6KnqSn8Gkm1cMvzhOfg/JQxM4qREsHSG7q4d5sy+OmoXiikSngC2t93z40fKBqz6d+kHsN7ZGa0="
        - os: osx
          language: generic
          env: TOXENV=py35-proj35
        - os: osx
          language: generic
          env: TOXENV=py34-proj34
        - os: osx
          language: generic
          env: TOXENV=py33-proj33
        - os: osx
          language: generic
          env: TOXENV=py27-proj27
#    allow_failures:
#        - env: TOXENV=py34-projpackaging

# check versions of tools, might be useful for debugging
before_install:
  - uname -a        # kernel version
  - python --version
  - virtualenv --version
  - pip --version

# upgrade virtualenv and tox
install:
  - if [[ $TRAVIS_OS_NAME == "linux" ]]; then bash ./.travis/install_linux.sh ; fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then bash ./.travis/install_osx.sh ; fi

# run tox tests
script:
  - if [[ $TRAVIS_OS_NAME == "linux" ]]; then travis_wait 60 bash ./.travis/pre_install.sh ; fi
  - if [[ $TRAVIS_OS_NAME == "linux" ]]; then travis_wait 60 tox ; fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then travis_wait bash ./.travis/run_osx.sh ; fi
