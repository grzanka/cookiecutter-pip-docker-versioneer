language: python

# travis-ci runs by default on ancient Ubuntu 12.04 (precise), with support until XXX
# following options will give us Ubuntu 14.04 (trusty)
sudo: required
dist: trusty


# for testing we'll use tox
# test matrix will include three types of python interpreter:
#   - on travis level: "python: XX"
#   - inside template virtualenv generated by tox: "pyXX" in TOXENV
#   - testing template includes generating a project
#        this project will use virtualenv generated by ita own tox: "projXX" in TOXENV
# other elements like "docs" will be used to test correctness of template documentation
matrix:
    include:
        - python: 2.7
          env: TOXENV=py27-proj27
        - python: 3.3
          env: TOXENV=py33-proj33
        - python: 3.4
          env: TOXENV=py34-proj34
        - python: 3.5
          env: TOXENV=py35-proj35
        - python: 3.5-dev
          env: TOXENV=py35-proj35
        # travis nightly points to python 3.6 now
        - python: nightly
          env: TOXENV=py36-proj36
        - python: 3.4
          env: TOXENV=docs
        - python: 3.4
          env:
            - TOXENV=testdeploy
           # GitHub secured token, you need to update it to your own if you want to use it
            - secure: "TvwFrRVjQzxnvMjV5Spo/WAfWOIjOR4j91dBqRaykyG2WLkAS95iOwkNaa0OAcqDQf6uFJ2so54qpz8yPCZ+540hu3AspN2aeSS9IBmhia8CZ592BHm+plT2FPQZMC4PzXtG3eW1VnL+3Skvzwe4v6Qzffai8YdEWDnMYOrq8QkDeJnP2YqhatyrBih3FIhXWsNxk//5FHm7OEtQAAFhm4cjf2+vlhCE79kO3ynK/SXJuNXUk6+aKlnvus4Ya6kvMLihq+pE6+1pP/zn/YBU6u2qtR8/xg8oLP3FwrzAgczInlAeC8aRZVhknTtdmJQJcPyteSwAtrdeLST/uvHyYdBC1EVEntx08mDpUJqsEn7usGPsx+4GCJQ6VoBppvE9MutAitfDQV0xEQrb3ESM2mFJ1rX6vNVd6GSp5cX7Ko8rMneD4o8/PNUwRnmL0hu14GiVvd1up3pFT2a1Q0y19TIMRPbHx6Qdhl3Qa13Owa2p4tzGJzmntOD1dtdYahSXoV5Gc+uWLgCz9LnCLgvW2l8cyegz8kM7bLjrUdB3sj2b5QQZSeKWIrm5X7yk6ny2I8IwhIT0YSi7DJVOwENyaxAudrijzQZ3rxJJy2CfUPX8w7vrvZwLSisvQhqKHR3maVWx/q8CJ08uvI0ydGgjMo8TS4dZc9aHtAcwgFVGfTQ="

# check versions of tools, might be useful for debugging
before_install:
  - lsb_release -a  # Ubuntu version
  - uname -a        # kernel version
  - python --version
  - virtualenv --version
  - pip --version

# upgrade virtualenv and tox
install:
  - pip install --upgrade virtualenv tox

# run tox tests
script:
  - tox
